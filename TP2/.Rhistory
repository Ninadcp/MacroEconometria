facet_wrap(~ Shock, scales = "free_y") +
scale_color_manual(values = c("Seco" = "orange", "Húmedo" = "blue")) +
scale_fill_manual(values = c("Seco" = "orange", "Húmedo" = "blue")) +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)", title = titulos[[var]]) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
strip.text = element_text(color = "black", face = "bold", size = 11),
legend.position = "bottom")
print(g)
ggsave(paste0("Gráficos/", var, "_shock_humedo_seco_nORES.png"), g, width = 10, height = 5, dpi = 300)
}
for (var in names(titulos)) {
idx.r <- which(colnames(datos) == var)
res <- lp.pw(
Y = datos[, 1:8],
D = St,
p = p_HQC,
idx.s = 1,
idx.r = idx.r,
H = H,
gamma = 0.95
)
df_plot <- tibble(h = 0:H, Shock = "Seco", pe = res$pe[, "1-D"], lb = res$lb[, "1-D"], ub = res$ub[, "1-D"], variable = titulos[[var]]) %>%
bind_rows(tibble(h = 0:H, Shock = "Húmedo", pe = res$pe[, "D"], lb = res$lb[, "D"], ub = res$ub[, "D"], variable = titulos[[var]]))
g <- ggplot(df_plot, aes(x = h, y = pe, color = Shock, fill = Shock)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.5, color = NA) +
facet_wrap(~ Shock, scales = "free_y") +
scale_color_manual(values = c("Seco" = "purple", "Húmedo" = "blue")) +
scale_fill_manual(values = c("Seco" = "purple", "Húmedo" = "blue")) +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)", title = titulos[[var]]) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
strip.text = element_text(color = "black", face = "bold", size = 11),
legend.position = "bottom")
print(g)
ggsave(paste0("Gráficos/", var, "_shock_humedo_seco_nORES.png"), g, width = 10, height = 5, dpi = 300)
}
epsilon <- smdi4
#promedio de SMDI de los 4 trimestres anteriores
datos_hp_cycle <- datos[, c("smdi", "gdp_socios", "gdp_agro_pc", "gdp_resto_pc",
"employment", "cons_pc", "invest_pc", "reer")]
smdi <- datos_hp_cycle[, "smdi"]
smdi_lag1 <- stats::lag(smdi, -1)
smdi_lag2 <- stats::lag(smdi, -2)
smdi_lag3 <- stats::lag(smdi, -3)
smdi_lag4 <- stats::lag(smdi, -4)
smdi4 <- window((smdi_lag1 + smdi_lag2 + smdi_lag3 + smdi_lag4) / 4,
start = c(2006, 1), end = c(2023, 4), frequency = 4)
#Dummys St: 1 si hay estado húmedo, 0 si estado seco
St <- as.numeric(smdi4 > 0)
epsilon <- smdi4
sigma1 <- sd(epsilon[St == 1])
sigma2 <- sd(epsilon[St == 0])
eps_humedo <- St * epsilon / sigma1
eps_seco   <- (1 - St) * epsilon / sigma2
#armamos base con shocks diferenciados
datos <- as.matrix(cbind(datos_hp_cycle, eps_humedo = eps_humedo, eps_seco = eps_seco))
colnames(datos) <- c(colnames(datos_hp_cycle), "eps_humedo", "eps_seco")
rm(list = setdiff(ls(), c("datos", "St", "p_HQC", "H")))
#Grafico IRF (same código q luca's del punto 7)
source("~/Downloads/PS3_LP_Tools.R")
titulos <- list(
smdi           = "SMDI",
gdp_socios     = "PIB de Socios Comerciales",
gdp_agro_pc    = "PIB Agropecuario per cápita",
gdp_resto_pc   = "PIB Resto per cápita",
employment     = "Empleo",
cons_pc        = "Consumo per cápita",
invest_pc      = "Inversión per cápita",
reer           = "Tipo de Cambio Real Multilateral"
)
p_HQC <- 1
H <- 20
for (var in names(titulos)) {
idx.r <- which(colnames(datos) == var)
res <- lp.pw(
Y = datos[, 1:8],
D = St,
p = p_HQC,
idx.s = 1,
idx.r = idx.r,
H = H,
gamma = 0.95
)
df_plot <- tibble(h = 0:H, Shock = "Seco", pe = res$pe[, "1-D"], lb = res$lb[, "1-D"], ub = res$ub[, "1-D"], variable = titulos[[var]]) %>%
bind_rows(tibble(h = 0:H, Shock = "Húmedo", pe = res$pe[, "D"], lb = res$lb[, "D"], ub = res$ub[, "D"], variable = titulos[[var]]))
g <- ggplot(df_plot, aes(x = h, y = pe, color = Shock, fill = Shock)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.5, color = NA) +
facet_wrap(~ Shock, scales = "free_y") +
scale_color_manual(values = c("Seco" = "purple", "Húmedo" = "blue")) +
scale_fill_manual(values = c("Seco" = "purple", "Húmedo" = "blue")) +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)", title = titulos[[var]]) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
strip.text = element_text(color = "black", face = "bold", size = 11),
legend.position = "bottom")
print(g)
ggsave(paste0("Gráficos/", var, "_shock_humedo_seco_nORES.png"), g, width = 10, height = 5, dpi = 300)
}
# CARGAR PAQUETES NECESARIOS
library(tidyverse)
library(lubridate)
library(zoo)
smdi <- datos_hp_cycle[, "smdi"]
# ASUMO QUE YA TENÉS LA SERIE SMDI EN FORMATO ts TRIMESTRAL
# Y YA HICISTE EL HP FILTER O PREPROCESAMIENTO EN 'datos_hp_cycle'
datos_hp_cycle <- datos[, c("smdi", "gdp_socios", "gdp_agro_pc", "gdp_resto_pc",
"employment", "cons_pc", "invest_pc", "reer")]
# PASO 1: Extraer el shock (usamos residual AR(2) como en los ejercicios anteriores)
smdi <- datos_hp_cycle[, "smdi"]
AR <- arima(smdi, order = c(2, 0, 0), include.mean = TRUE)
epsilon <- residuals(AR)
library(tidyverse)
library(lmtest)
library(sandwich)
library(ggplot2)
smdi <- datos_hp_cycle$smdi
smdi <- datos_hp_cycle[, "smdi"]
smdi <- datos_hp_cycle[, "smdi"]
ar_fit <- arima(smdi, order = c(2, 0, 0))  # AR(2)
epsilon_wt <- residuals(ar_fit)
# Determinar umbrales (1 SD)
sd_eps <- sd(epsilon_wt)
Dneg_large <- as.numeric(epsilon_wt < -sd_eps)
Dpos_large <- as.numeric(epsilon_wt >  sd_eps)
# Estandarización por grupo
sd_neg <- sd(epsilon_wt[Dneg_large == 1])
sd_pos <- sd(epsilon_wt[Dpos_large == 1])
sd_norm <- sd(epsilon_wt[Dneg_large == 0 & Dpos_large == 0])
eps_neg_std <- Dneg_large * epsilon_wt / sd_neg
eps_pos_std <- Dpos_large * epsilon_wt / sd_pos
eps_norm_std <- (1 - Dneg_large - Dpos_large) * epsilon_wt / sd_norm
#-----------------------------------------------------
# 2. Función LP robusta (con BW y Newey-West)
#-----------------------------------------------------
lp_hac_bw <- function(y, shock, H = 20, lags = 1) {
T <- length(y)
pe <- lb <- ub <- rep(NA, H + 1)
z <- qnorm(0.975)
for (h in 0:H) {
y_lead <- y[(h + 1):T]
x_shock <- shock[1:(T - h)]
# Construir matriz de controles (X_t-1): lags de y y shock
x_lags <- embed(cbind(y, shock), lags + 1)
x_ctrl <- x_lags[, -c(1:2)]  # eliminar columnas de tiempo t
y_reg <- y_lead[(lags):(length(y_lead) - 1)]
x_reg <- cbind(1, x_shock[(lags):(length(x_shock) - 1)], x_ctrl)
# Estimar regresión con errores Newey-West HAC (bandwidth BW = 4)
model <- lm(y_reg ~ x_reg - 1)
se <- sqrt(diag(NeweyWest(model, lag = 4, prewhite = FALSE)))
coef_est <- coef(model)[1]
pe[h + 1] <- coef_est
lb[h + 1] <- coef_est - z * se[1]
ub[h + 1] <- coef_est + z * se[1]
}
tibble(h = 0:H, pe = pe, lb = lb, ub = ub)
}
#-----------------------------------------------------
# 3. Aplicar a una variable (ej. PIB Agro)
#-----------------------------------------------------
y <- datos_hp_cycle$gdp_agro_pc
#-----------------------------------------------------
# 3. Aplicar a una variable (ej. PIB Agro)
#-----------------------------------------------------
y <- datos_hp_cycle[, "gdp_agro_pc"]
lp_neg <- lp_hac_bw(y, eps_neg_std)
lp_pos <- lp_hac_bw(y, eps_pos_std)
function (formula, data = NULL, subset = NULL, na.action = na.fail,
drop.unused.levels = FALSE, xlev = NULL, ...)
# CARGAR PAQUETES NECESARIOS
library(tidyverse)
library(lubridate)
library(zoo)
datos_hp_cycle <- datos[, c("smdi", "gdp_socios", "gdp_agro_pc", "gdp_resto_pc",
"employment", "cons_pc", "invest_pc", "reer")]
smdi <- datos_hp_cycle[, "smdi"]
AR <- arima(smdi, order = c(2, 0, 0), include.mean = TRUE)
epsilon <- residuals(AR)
trimestre <- cycle(smdi)  # valores 1, 2, 3, 4
trimestre
shock_q1 <- ifelse(trimestre == 1, epsilon, 0)
shock_q2 <- ifelse(trimestre == 2, epsilon, 0)
shock_q3 <- ifelse(trimestre == 3, epsilon, 0)
shock_q4 <- ifelse(trimestre == 4, epsilon, 0)
datos <- as.matrix(cbind(
window(datos_hp_cycle, start = c(2005, 1), end = c(2023, 4)),
shock_q1, shock_q2, shock_q3, shock_q4
))
colnames(datos) <- c(colnames(datos_hp_cycle), "shock_q1", "shock_q2", "shock_q3", "shock_q4")
H <- 20
p <- 1
gamma <- 0.95
source("PS3_LP_Tools.R")  # o tu función lp_symmetric modificada para 4 shocks
titulos <- list(
smdi           = "SMDI",
gdp_socios     = "PIB de Socios Comerciales",
gdp_agro_pc    = "PIB Agropecuario per cápita",
gdp_resto_pc   = "PIB Resto per cápita",
employment     = "Empleo",
cons_pc        = "Consumo per cápita",
invest_pc      = "Inversión per cápita",
reer           = "Tipo de Cambio Real Multilateral"
)
for (var in names(titulos)) {
y <- as.numeric(datos[, var])
# Ajustar con función multishock (adaptada o con 4 LPs por separado si es necesario)
res <- lp_shock4(
y = y,
shocks = datos[, c("shock_q1", "shock_q2", "shock_q3", "shock_q4")],
p = p,
H = H
)
df_plot <- bind_rows(
tibble(h = 0:H, trimestre = "T1", pe = res$pe1, lb = res$lb1, ub = res$ub1),
tibble(h = 0:H, trimestre = "T2", pe = res$pe2, lb = res$lb2, ub = res$ub2),
tibble(h = 0:H, trimestre = "T3", pe = res$pe3, lb = res$lb3, ub = res$ub3),
tibble(h = 0:H, trimestre = "T4", pe = res$pe4, lb = res$lb4, ub = res$ub4)
) %>% mutate(variable = titulos[[var]])
g <- ggplot(df_plot, aes(x = h, y = pe, color = trimestre, fill = trimestre)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.3, color = NA) +
facet_wrap(~ trimestre, scales = "free_y") +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)",
title = paste("IRF diferenciada por trimestre -", titulos[[var]])) +
theme_minimal(base_size = 13) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
print(g)
ggsave(paste0("Graficos_estacionales/", var, "_irf_por_trimestre.png"), g, width = 10, height = 5)
}
lp_shock4 <- function(y, shocks, p, H, gamma = 0.95) {
stopifnot(ncol(shocks) == 4)
n <- length(y)
z <- qnorm(1 - (1 - gamma) / 2)
pe_list <- list()
lb_list <- list()
ub_list <- list()
for (i in 1:4) {
shock <- shocks[, i]
pe <- rep(NA, H + 1)
lb <- rep(NA, H + 1)
ub <- rep(NA, H + 1)
for (h in 0:H) {
y_lead <- lead(y, h)
df <- tibble(
y_lead = y_lead,
shock = shock,
lags_y = lag(y, 1:p),
lags_s = lag(shock, 1:p)
) %>% drop_na()
# Armar fórmula dinámicamente
rhs <- c("shock", paste0("lags_y", 1:p), paste0("lags_s", 1:p))
colnames(df) <- c("y_lead", "shock", paste0("lags_y", 1:p), paste0("lags_s", 1:p))
fmla <- as.formula(paste("y_lead ~ -1 +", paste(rhs, collapse = " + ")))
fit <- lm(fmla, data = df)
se <- sqrt(diag(sandwich::vcovHAC(fit)))
pe[h + 1] <- coef(fit)["shock"]
lb[h + 1] <- pe[h + 1] - z * se["shock"]
ub[h + 1] <- pe[h + 1] + z * se["shock"]
}
pe_list[[i]] <- pe
lb_list[[i]] <- lb
ub_list[[i]] <- ub
}
names(pe_list) <- c("pe1", "pe2", "pe3", "pe4")
names(lb_list) <- c("lb1", "lb2", "lb3", "lb4")
names(ub_list) <- c("ub1", "ub2", "ub3", "ub4")
c(pe_list, lb_list, ub_list)
}
for (var in names(titulos)) {
y <- as.numeric(datos[, var])
# Ajustar con función multishock (adaptada o con 4 LPs por separado si es necesario)
res <- lp_shock4(
y = y,
shocks = datos[, c("shock_q1", "shock_q2", "shock_q3", "shock_q4")],
p = p,
H = H
)
df_plot <- bind_rows(
tibble(h = 0:H, trimestre = "T1", pe = res$pe1, lb = res$lb1, ub = res$ub1),
tibble(h = 0:H, trimestre = "T2", pe = res$pe2, lb = res$lb2, ub = res$ub2),
tibble(h = 0:H, trimestre = "T3", pe = res$pe3, lb = res$lb3, ub = res$ub3),
tibble(h = 0:H, trimestre = "T4", pe = res$pe4, lb = res$lb4, ub = res$ub4)
) %>% mutate(variable = titulos[[var]])
g <- ggplot(df_plot, aes(x = h, y = pe, color = trimestre, fill = trimestre)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.3, color = NA) +
facet_wrap(~ trimestre, scales = "free_y") +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)",
title = paste("IRF diferenciada por trimestre -", titulos[[var]])) +
theme_minimal(base_size = 13) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
print(g)
ggsave(paste0("Graficos_estacionales/", var, "_irf_por_trimestre.png"), g, width = 10, height = 5)
}
shocks <- apply(shocks, 2, as.numeric)
y <- as.numeric(y)
shocks <- apply(shocks, 2, as.numeric)
for (var in names(titulos)) {
y <- as.numeric(datos[, var])
# Ajustar con función multishock (adaptada o con 4 LPs por separado si es necesario)
res <- lp_shock4(
y = y,
shocks = datos[, c("shock_q1", "shock_q2", "shock_q3", "shock_q4")],
p = p,
H = H
)
y <- as.numeric(y)
shocks <- apply(shocks, 2, as.numeric)
df_plot <- bind_rows(
tibble(h = 0:H, trimestre = "T1", pe = res$pe1, lb = res$lb1, ub = res$ub1),
tibble(h = 0:H, trimestre = "T2", pe = res$pe2, lb = res$lb2, ub = res$ub2),
tibble(h = 0:H, trimestre = "T3", pe = res$pe3, lb = res$lb3, ub = res$ub3),
tibble(h = 0:H, trimestre = "T4", pe = res$pe4, lb = res$lb4, ub = res$ub4)
) %>% mutate(variable = titulos[[var]])
g <- ggplot(df_plot, aes(x = h, y = pe, color = trimestre, fill = trimestre)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.3, color = NA) +
facet_wrap(~ trimestre, scales = "free_y") +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)",
title = paste("IRF diferenciada por trimestre -", titulos[[var]])) +
theme_minimal(base_size = 13) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
print(g)
ggsave(paste0("Graficos_estacionales/", var, "_irf_por_trimestre.png"), g, width = 10, height = 5)
}
rlang::last_trace()
lp_shock4 <- function(y, shocks, p, H, gamma = 0.95) {
library(sandwich)
library(dplyr)
library(tibble)
z <- qnorm(1 - (1 - gamma) / 2)
y <- as.numeric(y)
shocks <- apply(shocks, 2, as.numeric)
pe_list <- list()
lb_list <- list()
ub_list <- list()
for (i in 1:4) {
shock <- shocks[, i]
pe <- rep(NA, H + 1)
lb <- rep(NA, H + 1)
ub <- rep(NA, H + 1)
for (h in 0:H) {
y_lead <- dplyr::lead(y, h)
df <- tibble(
y_lead = y_lead,
shock = shock
)
# Crear rezagos de y y del shock
for (j in 1:p) {
df[[paste0("lags_y", j)]] <- dplyr::lag(y, j)
df[[paste0("lags_s", j)]] <- dplyr::lag(shock, j)
}
df <- df %>% drop_na()
fmla <- as.formula(paste("y_lead ~ -1 +", paste(colnames(df)[-1], collapse = " + ")))
fit <- lm(fmla, data = df)
se <- sqrt(diag(sandwich::vcovHAC(fit)))
pe[h + 1] <- coef(fit)["shock"]
lb[h + 1] <- pe[h + 1] - z * se["shock"]
ub[h + 1] <- pe[h + 1] + z * se["shock"]
}
pe_list[[i]] <- pe
lb_list[[i]] <- lb
ub_list[[i]] <- ub
}
names(pe_list) <- paste0("pe", 1:4)
names(lb_list) <- paste0("lb", 1:4)
names(ub_list) <- paste0("ub", 1:4)
return(c(pe_list, lb_list, ub_list))
}
titulos <- list(
smdi           = "SMDI",
gdp_socios     = "PIB de Socios Comerciales",
gdp_agro_pc    = "PIB Agropecuario per cápita",
gdp_resto_pc   = "PIB Resto per cápita",
employment     = "Empleo",
cons_pc        = "Consumo per cápita",
invest_pc      = "Inversión per cápita",
reer           = "Tipo de Cambio Real Multilateral"
)
for (var in names(titulos)) {
y <- as.numeric(datos[, var])
# Ajustar con función multishock (adaptada o con 4 LPs por separado si es necesario)
res <- lp_shock4(
y = y,
shocks = datos[, c("shock_q1", "shock_q2", "shock_q3", "shock_q4")],
p = p,
H = H
)
y <- as.numeric(y)
shocks <- apply(shocks, 2, as.numeric)
df_plot <- bind_rows(
tibble(h = 0:H, trimestre = "T1", pe = res$pe1, lb = res$lb1, ub = res$ub1),
tibble(h = 0:H, trimestre = "T2", pe = res$pe2, lb = res$lb2, ub = res$ub2),
tibble(h = 0:H, trimestre = "T3", pe = res$pe3, lb = res$lb3, ub = res$ub3),
tibble(h = 0:H, trimestre = "T4", pe = res$pe4, lb = res$lb4, ub = res$ub4)
) %>% mutate(variable = titulos[[var]])
g <- ggplot(df_plot, aes(x = h, y = pe, color = trimestre, fill = trimestre)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.3, color = NA) +
facet_wrap(~ trimestre, scales = "free_y") +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)",
title = paste("IRF diferenciada por trimestre -", titulos[[var]])) +
theme_minimal(base_size = 13) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
print(g)
ggsave(paste0("Graficos_estacionales/", var, "_irf_por_trimestre.png"), g, width = 10, height = 5)
}
for (var in names(titulos)) {
y <- as.numeric(datos[, var])
res <- lp_shock4(
y = y,
shocks = datos[, c("shock_q1", "shock_q2", "shock_q3", "shock_q4")],
p = p,
H = H
)
df_plot <- bind_rows(
tibble(h = 0:H, trimestre = "T1", pe = res$pe1, lb = res$lb1, ub = res$ub1),
tibble(h = 0:H, trimestre = "T2", pe = res$pe2, lb = res$lb2, ub = res$ub2),
tibble(h = 0:H, trimestre = "T3", pe = res$pe3, lb = res$lb3, ub = res$ub3),
tibble(h = 0:H, trimestre = "T4", pe = res$pe4, lb = res$lb4, ub = res$ub4)
) %>% mutate(variable = titulos[[var]])
g <- ggplot(df_plot, aes(x = h, y = pe, color = trimestre, fill = trimestre)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.3, color = NA) +
facet_wrap(~ trimestre, scales = "free_y") +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Horizonte (trimestres)", y = "Respuesta estimada (%)",
title = paste("IRF diferenciada por trimestre -", titulos[[var]])) +
theme_minimal(base_size = 13) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
print(g)
ggsave(paste0("Graficos_estacionales/", var, "_irf_por_trimestre.png"), g, width = 10, height = 5)
}
# CARGA DE PAQUETES Y PREPROCESAMIENTO
library(tidyverse)
library(lubridate)
library(zoo)
# Asumimos que ya tenés cargada y procesada 'datos_hp_cycle'
# con las columnas: smdi, gdp_agro_pc, employment, etc.
# Shock como residual AR(2) del SMDI
smdi <- datos_hp_cycle[, "smdi"]
AR <- arima(smdi, order = c(2, 0, 0), include.mean = TRUE)
epsilon <- residuals(AR)
# Determinar trimestre calendario
trimestre <- cycle(smdi)
# Construir dummy de temporada agrícola crítica (T1 = trimestres 4 y 1)
T1 <- as.numeric(trimestre == 1 | trimestre == 4)  # Octubre-Marzo
T2 <- 1 - T1
# Shocks interactuados (residuales diferenciados por temporada)
shock_agricola <- T1 * epsilon
shock_no_agricola <- T2 * epsilon
# Base final
datos <- as.matrix(cbind(
window(datos_hp_cycle, start = c(2005, 1), end = c(2023, 4)),
shock_agricola,
shock_no_agricola
))
colnames(datos) <- c(colnames(datos_hp_cycle), "shock_agricola", "shock_no_agricola")
# PARÁMETROS LP
H <- 20
p <- 1
gamma <- 0.95
source("PS3_LP_Tools.R") # Asegurate de tener la función `lp_pw()` disponible
titulos <- list(
smdi           = "SMDI",
gdp_socios     = "PIB de Socios Comerciales",
gdp_agro_pc    = "PIB Agropecuario per cápita",
gdp_resto_pc   = "PIB Resto per cápita",
employment     = "Empleo",
cons_pc        = "Consumo per cápita",
invest_pc      = "Inversión per cápita",
reer           = "Tipo de Cambio Real Multilateral"
)
# LOOP DE ESTIMACIÓN Y GRÁFICO
for (var in names(titulos)) {
Y <- datos[, c("shock_agricola", "shock_no_agricola", var)]
D <- T1[(p + 1):length(T1)]  # Dummy de temporada crítica
res <- lp.pw(Y = Y, D = D, p = p, idx.s = 1, idx.r = 3, H = H, gamma = gamma)
df_plot <- bind_rows(
tibble(h = 0:H, temporada = "Siembra/Cosecha", pe = res$pe[, "D"], lb = res$lb[, "D"], ub = res$ub[, "D"]),
tibble(h = 0:H, temporada = "Fuera de temporada", pe = res$pe[, "1-D"], lb = res$lb[, "1-D"], ub = res$ub[, "1-D"])
) %>% mutate(variable = titulos[[var]])
g <- ggplot(df_plot, aes(x = h, y = pe, color = temporada, fill = temporada)) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lb, ymax = ub), alpha = 0.3, color = NA) +
facet_wrap(~ temporada, scales = "free_y") +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2") +
labs(
x = "Horizonte (trimestres)",
y = "Respuesta estimada (%)",
title = paste("IRF diferenciada por temporada agrícola -", titulos[[var]])
) +
theme_minimal(base_size = 13) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
print(g)
ggsave(paste0("Graficos_estacionales/", var, "_por_temporada_agricola.png"), g, width = 10, height = 5)
}
