# Estimo el VAR reducido
var_chile_VAR <- vars::VAR(var_chile_diff_ordered, p = 1, type = "const")
# Tamaño del sistema = 5
m <- var_chile_VAR$K
# Matrices de restricciones (AB-model)
Amat_chile <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat_chile[i, j] <- NA
}
}
Bmat_chile <- matrix(0, m, m)
diag(Bmat_chile) <- NA
# Estimación SVAR estructural (forma AB)
svar_chile <- SVAR(var_chile_VAR, Amat = Amat_chile, Bmat = Bmat_chile, lrtest = FALSE)
# IRFs
irf_chile <- irf(svar_chile, impulse = "d_tpm_chile", response = colnames(var_chile_diff_ordered),
n.ahead = 12, boot = TRUE)
png(file.path(output, "IRF_Chile_nuev.png"), width = 1000, height = 800)
plot(irf_chile)
dev.off()
# FEVD
fevd_chile <- fevd(svar_chile, n.ahead = 12)
png(file.path(output, "FEVD_Chile_nuev.png"), width = 1000, height = 800)
plot(fevd_chile)
dev.off()
# ---------- México ---------- #
var_mexico_VAR <- vars::VAR(var_mexico_diff_ordered, p = 1, type = "const")
m_mex <- var_mexico_VAR$K
Amat_mexico <- diag(m_mex)
for (i in 2:m_mex) {
for (j in 1:(i - 1)) {
Amat_mexico[i, j] <- NA
}
}
Bmat_mexico <- matrix(0, m_mex, m_mex)
diag(Bmat_mexico) <- NA
svar_mexico <- vars::SVAR(var_mexico_VAR, Amat = Amat_mexico, Bmat = Bmat_mexico, lrtest = FALSE)
irf_mexico <- irf(svar_mexico, impulse = "d_tpm_mexico", response = colnames(var_mexico_diff_ordered),
n.ahead = 12, boot = TRUE)
png(file.path(output, "IRF_Mexico.png"), width = 1000, height = 800)
plot(irf_mexico)
dev.off()
fevd_mexico <- fevd(svar_mexico, n.ahead = 20)
png(file.path(output, "FEVD_Mexico.png"), width = 1000, height = 800)
par(cex.main = 1.6,
cex.lab = 1.7,
cex.axis = 1,
mar = c(4, 4, 2, 1))
plot(fevd_mexico)
dev.off()
library(tidyverse)
# Paso 1: transformar el objeto irf en un tibble largo
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
Horizon = 0:12,
Variable = var,
IRF     = c(0, irf_mexico$irf[[var]]),
Lower   = c(0, irf_mexico$Lower[[var]]),
Upper   = c(0, irf_mexico$Upper[[var]])
)
})
library(tidyverse)
# Crear tibble con las IRFs de forma segura
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
Horizon = 0:12,  # o length(irf_mexico$irf[[var]]) - 1 si querés que sea automático
Variable = var,
IRF     = irf_mexico$irf[[var]],
Lower   = irf_mexico$Lower[[var]],
Upper   = irf_mexico$Upper[[var]]
)
})
ggplot(tidy_irf_mexico, aes(x = Horizon, y = IRF)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
map_int(irf_mexico$irf, length)
map_int(irf_mexico$Lower, length)
map_int(irf_mexico$Upper, length)
ggplot(tidy_irf_mexico, aes(x = Horizon, y = IRF)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
irf_mexico <- irf(svar_mexico, impulse = "d_tpm_mexico", response = colnames(var_mexico_diff_ordered),
n.ahead = 12, ortho=TRUE, boot = TRUE) #AGREGAR SU D IDENTIFICACIÓN
png(file.path(output, "IRF_Mexico.png"), width = 1000, height = 800)
plot(irf_mexico)
dev.off()
plot.sirf <- function(X, m, H) {
for (i in 1:m) {
par(mfrow = c(m, 1))
for (j in 1:m) {
plot(0:H, X[i, j, ],
main = paste("Response of", dimnames(X)[[1]][i], "to", dimnames(X)[[2]][j], "shock", sep = " "),
xlab = "Horizon", ylab = "",
type = "o", lwd = 2)
grid(NULL, NULL, lty = 1)
}
}
}
plot.fevd <- function(X, m, H) {
par(mfrow = c(1, 1))
for (i in 1:m) {
barplot(X[i, , ], names.arg = as.character(0:H),
main = paste("FEVD of ", dimnames(X)[[1]][i], " (log. differences)", sep = ""),
xlab = "Horizon", ylab = "%",
legend.text = paste("Shock:", dimnames(X)[[2]], sep = " "))
}
}
plot.hd.i <- function(y, X, m, series.i) {
X <- t(X)
s.date <- as.Date(paste(start(y)[1], start(y)[2], 01, sep = "-"))
t <- seq(seq.Date(s.date, length = 2, by = paste(p + 1, "months"))[2], by = "month", length.out = ncol(X))
X.n <- X.p <- X
X.n[X.n < 0] <- 0
X.p[X.p > 0] <- 0
title <- paste("Historical Decomposition of ", series.i, sep = "")
range <- c(min(colSums(X.p) - 0.05), max(colSums(X.n)) + 0.05)
color <- palette()
color <- color[2:(m + 1)]
bplot <- barplot(X.n,
ylim = range,
ylab = "%",
main = title,
col = color,
names.arg = as.yearmon(t),
cex.main = 0.8,
cex.axis = 0.8,
cex.names = 0.8)
barplot(X.p,
add = TRUE,
main = title,
ylim = rev(range),
ylab = "%",
col = color,
names.arg = as.yearmon(t),
cex.main = 0.8,
cex.axis = 0.8,
cex.names = 0.8)
lines(x = bplot, y = y, lwd = 3, col = "black")
legend("topleft",
inset = 0.005,
legend = c(rownames(X), series.i),
col = c(color, "black"),
box.lty = 0,
lwd = 3,
cex = 0.8,
horiz = TRUE)
bplot
}
plot.hd <- function(Y, X, m) {
variable.names <- colnames(Y)
for (i in 1:m) {
series.i <- toupper(variable.names[i])
X.n <- ts(c(t(X[i, m + 1, ])), end = end(Y), frequency = frequency(Y))
X.s <- ts(t(X[i, 1:m, ]), end = end(Y), frequency = frequency(Y))
Y.d <- ts(Y[(p + 1):nrow(Y), i], end = end(Y), frequency = frequency(Y)) - X.n
plot.hd.i(Y.d, X.s, m, series.i)
}
}
plot.erpt <- function(X, H) {
par(mfrow = c(1, 1))
plot(0:H, X,
main = "Exchange-rate pass-through to consumer prices",
xlab = "Horizon", ylab = "%",
type = "o", lwd = 2)
grid(NULL, NULL, lty = 1)
}
plot.sirf.boot <- function(X, m, H) {
for (i in 1:m) {
par(mfrow = c(m, 1))
for (j in 1:m) {
plot(0:H, X$pe[i, j, ],
main = paste("Response of", dimnames(X$pe)[[1]][i], "to", dimnames(X$pe)[[2]][j], "shock", sep = " "),
xlab = "Horizon", ylab = "",
ylim = c(min(X$lb[i, j, ]), max(X$ub[i, j, ])),
type = "o", lwd = 2)
grid(NULL, NULL, lty = 1)
xx <- c(0:H, H:0)
yy <- c(c(X$lb[i, j, ]), rev(c(X$ub[i, j, ])))
polygon(xx, yy, col = adjustcolor("grey", alpha.f = 0.5), border = NA)
}
}
}
plot.fevd.boot <- function(X, m, H) {
for (i in 1:m) {
par(mfrow = c(m, 1))
for (j in 1:m) {
plot(0:H, X$pe[i, j, ],
main = paste("Contribution of", dimnames(X$pe)[[2]][j], "shock to variance of", dimnames(X$pe)[[1]][i], sep = " "),
xlab = "Horizon", ylab = "%",
ylim = c(0, 100),
type = "o", lwd = 2)
grid(NULL, NULL, lty = 1)
xx <- c(0:H, H:0)
yy <- c(c(X$lb[i, j, ]), rev(c(X$ub[i, j, ])))
polygon(xx, yy, col = adjustcolor("grey", alpha.f = 0.5), border = NA)
}
}
}
plot.erpt.boot <- function(X, H) {
plot(0:H, X$pe,
main = "Exchange-rate pass-through to consumer prices",
xlab = "Horizon", ylab = "%",
ylim = c(min(X$lb), max(X$ub)),
type = "o", lwd = 2)
grid(NULL, NULL, lty = 1)
xx <- c(0:H, H:0)
yy <- c(c(X$lb), rev(c(X$ub)))
polygon(xx, yy, col = adjustcolor("grey", alpha.f = 0.5), border = NA)
}
irf_mexico
# Crear tibble con las IRFs de forma segura
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
Horizon = 0:12,  # o length(irf_mexico$irf[[var]]) - 1 si querés que sea automático
Variable = var,
IRF     = irf_mexico$irf[[var]],
Lower   = irf_mexico$Lower[[var]],
Upper   = irf_mexico$Upper[[var]]
)
})
ggplot(tidy_irf_mexico, aes(x = Horizon, y = IRF)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
#Horizon = 0:12,  # o length(irf_mexico$irf[[var]]) - 1 si querés que sea automático
Variable = var,
IRF     = irf_mexico$irf[[var]],
Lower   = irf_mexico$Lower[[var]],
Upper   = irf_mexico$Upper[[var]]
)
})
ggplot(tidy_irf_mexico, aes(x = Horizon, y = IRF)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
Horizon = 0:11,  # o length(irf_mexico$irf[[var]]) - 1 si querés que sea automático
Variable = var,
IRF     = irf_mexico$irf[[var]],
Lower   = irf_mexico$Lower[[var]],
Upper   = irf_mexico$Upper[[var]]
)
})
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
Horizon = 0:11,  # o length(irf_mexico$irf[[var]]) - 1 si querés que sea automático
Variable = var,
IRF     = irf_mexico$irf[[var]],
Lower   = irf_mexico$Lower[[var]],
Upper   = irf_mexico$Upper[[var]]
)
})
irf_mexico$irf
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
Horizon = 0:12,  # o length(irf_mexico$irf[[var]]) - 1 si querés que sea automático
Variable = var,
IRF     = irf_mexico$irf[[var]],
Lower   = irf_mexico$Lower[[var]],
Upper   = irf_mexico$Upper[[var]]
)
})
ggplot(tidy_irf_mexico, aes(x = Horizon, y = IRF)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(tidy_irf_mexico, aes(x = Horizon, y = IRF)) +
#geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
Lower
Lower   = irf_mexico$Lower[[var]],
var <- d_inpc
var <- "d_inpc"
ggplot(tidy_irf_mexico, aes(x = Horizon, y = irf_mexico$irf[[var]])) +
geom_ribbon(aes(ymin = irf_mexico$Lower[[var]], ymax = irf_mexico$Upper[[var]]), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
var
ggplot(tidy_irf_mexico, aes(x = Horizon, y = irf_mexico$irf[[var]])) +
geom_ribbon(aes(ymin = irf_mexico$Lower[[var]], ymax = irf_mexico$Upper[[var]]), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(aes(x = Horizon, y = irf_mexico$irf[[var]])) +
geom_ribbon(aes(ymin = irf_mexico$Lower[[var]], ymax = irf_mexico$Upper[[var]]), fill = "steelblue", alpha = 0.3) +
geom_line(color = "steelblue", size = 1.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta") +
theme(plot.title = element_text(hjust = 0.5))
library(tidyverse)
library(vars)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls(all.names = TRUE))
gc()
source("TP1_UR.R")
source("TP1_2.R")
library(tidyverse)
library(vars)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls(all.names = TRUE))
gc()
source("TP1_2.R")
lag_select <- VARselect(Y, lag.max = xx, type = "const")
lags <- lag_select$selection[2] # HQIC
=
#--------------------------------------------
# Paquetes y limpieza
#--------------------------------------------
library(urca)
library(stringr)
library(tibble)
library(dplyr)
library(readr)
library(readr)
library(readr)
library(readr)
library(readr)
library(vars)
library(tidyverse)
rm(list=ls())
gc()
#--------------------------------------------
# Cargar procesamiento y definir path
#--------------------------------------------
source("/Users/ninadicostanzopereira/Desktop/MacroMetrics/TP1/TP1_Procesamiento.R")
wd <- "/Users/ninadicostanzopereira/Desktop/MacroMetrics/TP1"
output <- file.path(wd, "output")
#--------------------------------------------
# ADF tests (Chile y México)
#--------------------------------------------
test_adf <- function(ts_data, pais) {
resultados <- lapply(colnames(ts_data), function(nombre) {
serie <- ts_data[, nombre]
test <- ur.df(serie, type = "trend", selectlags = "BIC")
resumen <- summary(test)
estadistico <- round(resumen@teststat[1], 3)
valor_critico <- resumen@cval[1, "5pct"]
decision <- ifelse(estadistico < valor_critico,
"Rechazo H0 (es estacionaria)",
"No rechazo H0 (tiene raíz unitaria)")
tibble(País = pais, Variable = nombre, Lag_BIC = test@lags,
Estadístico_ADF = estadistico,
Valor_crítico_5pct = valor_critico,
Decisión = decision)
})
bind_rows(resultados)
}
adf_chile <- test_adf(var_chile, "Chile")
adf_mexico <- test_adf(var_mexico, "México")
adf_resultados <- bind_rows(adf_chile, adf_mexico)
write_csv(adf_resultados, file.path(output, "adf_resultados.csv"))
#--------------------------------------------
# Preparación de datos para el VAR
#--------------------------------------------
# --- CHILE ---
diff_imacec     <- diff(var_chile[, "imacec"])
diff_ipc_sae    <- diff(var_chile[, "ipc_sae"])
diff_tcn_chile  <- diff(var_chile[, "tcn_chile"])
diff_tpm_chile  <- diff(var_chile[, "tpm_chile"])
diff_embi_chile <- diff(var_chile[, "embi_chile"])
embi_chile_recortado <- window(diff_embi_chile, start = start(diff_imacec))
var_chile_diff <- cbind(diff_imacec, diff_ipc_sae, diff_tcn_chile, embi_chile_recortado, diff_tpm_chile)
colnames(var_chile_diff) <- c("d_imacec", "d_ipc_sae", "d_tcn_chile", "embi_chile", "d_tpm_chile")
orden_chile <- c("d_ipc_sae", "d_imacec", "d_tpm_chile", "d_tcn_chile", "embi_chile")
var_chile_diff_ordered <- var_chile_diff[, orden_chile]
# --- MÉXICO ---
diff_inpc        <- diff(var_mexico[, "inpc"])
diff_tcn_mexico  <- diff(var_mexico[, "tcn_mexico"])
diff_tpm_mexico  <- diff(var_mexico[, "tpm_mexico"])
diff_embi_mexico <- diff(var_mexico[, "embi_mexico"])
igae_recortado        <- window(var_mexico[, "igae"], start = start(diff_inpc))
embi_mexico_recortado <- window(diff_embi_mexico, start = start(diff_inpc))
var_mexico_diff <- cbind(igae_recortado, diff_inpc, diff_tcn_mexico, embi_mexico_recortado, diff_tpm_mexico)
colnames(var_mexico_diff) <- c("igae", "d_inpc", "d_tcn_mexico", "embi_mexico", "d_tpm_mexico")
orden_mexico <- c("d_inpc", "igae", "d_tpm_mexico", "d_tcn_mexico", "embi_mexico")
var_mexico_diff_ordered <- var_mexico_diff[, orden_mexico]
#--------------------------------------------
# Estimación SVAR y obtención de IRFs
#--------------------------------------------
# ---------- MÉXICO ----------
var_mexico_VAR <- vars::VAR(var_mexico_diff_ordered, p = 1, type = "const")
m_mex <- var_mexico_VAR$K
Amat_mexico <- diag(m_mex)
for (i in 2:m_mex) {
for (j in 1:(i - 1)) {
Amat_mexico[i, j] <- NA
}
}
Bmat_mexico <- matrix(0, m_mex, m_mex)
diag(Bmat_mexico) <- NA
svar_mexico <- SVAR(var_mexico_VAR, Amat = Amat_mexico, Bmat = Bmat_mexico, lrtest = FALSE)
irf_mexico <- irf(svar_mexico, impulse = "d_tpm_mexico",
response = colnames(var_mexico_diff_ordered),
n.ahead = 12, boot = TRUE)
#--------------------------------------------
# Visualización de IRFs con ggplot2
#--------------------------------------------
tidy_irf_mexico <- map_dfr(names(irf_mexico$irf), function(var) {
tibble(
Horizon = 0:12,
Variable = var,
IRF     = irf_mexico$irf[[var]],
Lower   = irf_mexico$Lower[[var]],
Upper   = irf_mexico$Upper[[var]]
)
})
# Guardar gráfico IRF México en ggplot2
ggplot(tidy_irf_mexico, aes(x = Horizon, y = IRF)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "skyblue", alpha = 0.4) +
geom_line(color = "steelblue", linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
facet_wrap(~ Variable, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(title = "IRFs ante un shock de política monetaria (México)",
x = "Horizonte (meses)",
y = "Respuesta",
caption = "Identificación recursiva – ortogonalización bootstrap") +
theme(plot.title = element_text(hjust = 0.5)) +
ggsave(file.path(output, "IRF_Mexico_ggplot.png"), width = 10, height = 7)
library(tidyverse)
library(vars)
# Configuración inicial
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls(all.names = TRUE))
gc()
# Cargar scripts
source("TP1_2.R")
#===============================================================================
# Trabajo Práctico 1 - SVAR + IRF con gráficos ggplot2 - VERSIÓN 20/07
#===============================================================================
library(tidyverse)
library(vars)
# Configuración inicial
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls(all.names = TRUE))
gc()
# Cargar scripts
source("TP1_2.R")
ggplot(data = df_plot, aes(x = horizon, y = pe)) +
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "grey80", alpha = 0.75) +
geom_line(color = "black", size = 1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "darkgrey") +
facet_wrap(~response, scales = "free_y", ncol = 3, nrow = 2) +
theme_minimal(base_size = 14) +
labs(
x = "Horizonte",
y = "Respuesta",
title = paste("IRF al shock en", shock_name, "—", country),
caption = "IC al 95% (Bootstrap)"
) +
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold")
)
